services:
  # PostgreSQL Database - 모든 마이크로서비스 공용
  postgres:
    image: postgres:15-alpine
    container_name: smart-factory-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: smartfactory
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # 각 마이크로서비스별 스키마 자동 생성
      POSTGRES_MULTIPLE_DATABASES: usermanagement,report,approvalmanagement,pressfaultdetection,chatbot,assemblyprocessmonitoring,weldingprocessmonitoring,paintingequipmentmonitoring
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - smart-factory-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smartfactory"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kafka - 기존 설정 유지
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"   # 클라이언트 통신용
    environment:
      # KRaft 모드 필수 설정
      CLUSTER_ID: "kraft-cluster-01"
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # 리스너 설정
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # 기타 필수 설정
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      
      # 메시지 크기 제한 증가 (추가)
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_MAX_REQUEST_SIZE: 10485760
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - smart-factory-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server localhost:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # 개발용 PostgreSQL 관리 도구 (선택사항)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: smart-factory-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@smartfactory.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - smart-factory-network

volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local

networks:
  smart-factory-network:
    driver: bridge
    name: smart-factory-network