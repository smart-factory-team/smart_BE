# kubernetes/template.yml
# 공통 변경:
# - readinessProbe -> /actuator/health/readiness
# - livenessProbe  -> /actuator/health/liveness
# - Kafka 부트스트랩 주소 전 서비스 주입:
#     SPRING_KAFKA_BOOTSTRAP_SERVERS = kafka.smart-be.svc.cluster.local:9092
#     SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS = kafka.smart-be.svc.cluster.local:9092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usermanagement
  namespace: smart-be
  labels:
    app: usermanagement
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermanagement
  template:
    metadata:
      labels:
        app: usermanagement
    spec:
      containers:
        - name: usermanagement
          image: 23acr.azurecr.io/smart-be-usermanagement:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/usermanagement"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka (공통)
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: report
  namespace: smart-be
  labels:
    app: report
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report
  template:
    metadata:
      labels:
        app: report
    spec:
      containers:
        - name: report
          image: 23acr.azurecr.io/smart-be-report:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/report"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: approvalmanagement
  namespace: smart-be
  labels:
    app: approvalmanagement
spec:
  replicas: 1
  selector:
    matchLabels:
      app: approvalmanagement
  template:
    metadata:
      labels:
        app: approvalmanagement
    spec:
      containers:
        - name: approvalmanagement
          image: 23acr.azurecr.io/smart-be-approvalmanagement:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/approvalmanagement"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pressfaultdetection
  namespace: smart-be
  labels:
    app: pressfaultdetection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pressfaultdetection
  template:
    metadata:
      labels:
        app: pressfaultdetection
    spec:
      containers:
        - name: pressfaultdetection
          image: 23acr.azurecr.io/smart-be-pressfaultdetection:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/pressfaultdetection"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot
  namespace: smart-be
  labels:
    app: chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatbot
  template:
    metadata:
      labels:
        app: chatbot
    spec:
      containers:
        - name: chatbot
          image: 23acr.azurecr.io/smart-be-chatbot:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/chatbot"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paintingprocessmonitoring
  namespace: smart-be
  labels:
    app: paintingprocessmonitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paintingprocessmonitoring
  template:
    metadata:
      labels:
        app: paintingprocessmonitoring
    spec:
      containers:
        - name: paintingprocessmonitoring
          image: 23acr.azurecr.io/smart-be-paintingprocessmonitoring:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/paintingprocessmonitoring"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assemblyprocessmonitoring
  namespace: smart-be
  labels:
    app: assemblyprocessmonitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assemblyprocessmonitoring
  template:
    metadata:
      labels:
        app: assemblyprocessmonitoring
    spec:
      containers:
        - name: assemblyprocessmonitoring
          image: 23acr.azurecr.io/smart-be-assemblyprocessmonitoring:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/assemblyprocessmonitoring"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weldingprocessmonitoring
  namespace: smart-be
  labels:
    app: weldingprocessmonitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weldingprocessmonitoring
  template:
    metadata:
      labels:
        app: weldingprocessmonitoring
    spec:
      containers:
        - name: weldingprocessmonitoring
          image: 23acr.azurecr.io/smart-be-weldingprocessmonitoring:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/weldingprocessmonitoring"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: postgres-secret, key: username } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: password } }
            # Kafka
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: "kafka.smart-be.svc.cluster.local:9092"
            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
              value: "kafka.smart-be.svc.cluster.local:9092"
          readinessProbe:
            httpGet: { path: "/actuator/health/readiness", port: 8080 }
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/actuator/health/liveness", port: 8080 }
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: usermanagement
  namespace: smart-be
  labels:
    app: usermanagement
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: usermanagement
---
apiVersion: v1
kind: Service
metadata:
  name: report
  namespace: smart-be
  labels:
    app: report
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: report
---
apiVersion: v1
kind: Service
metadata:
  name: approvalmanagement
  namespace: smart-be
  labels:
    app: approvalmanagement
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: approvalmanagement
---
apiVersion: v1
kind: Service
metadata:
  name: pressfaultdetection
  namespace: smart-be
  labels:
    app: pressfaultdetection
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: pressfaultdetection
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot
  namespace: smart-be
  labels:
    app: chatbot
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: chatbot
---
apiVersion: v1
kind: Service
metadata:
  name: paintingprocessmonitoring
  namespace: smart-be
  labels:
    app: paintingprocessmonitoring
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: paintingprocessmonitoring
---
apiVersion: v1
kind: Service
metadata:
  name: assemblyprocessmonitoring
  namespace: smart-be
  labels:
    app: assemblyprocessmonitoring
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: assemblyprocessmonitoring
---
apiVersion: v1
kind: Service
metadata:
  name: weldingprocessmonitoring
  namespace: smart-be
  labels:
    app: weldingprocessmonitoring
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: weldingprocessmonitoring
